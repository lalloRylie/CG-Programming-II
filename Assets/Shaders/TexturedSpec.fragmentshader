#version 330 core
 
// Interpolated values from the vertex shaders
in vec2 UV;
in vec3 normals;
in float intensity;
in vec3 lightDirection;
 
// Ouput data
out vec4 color;
 
// Values that stay constant for the whole mesh.
uniform sampler2D myTextureSampler;
uniform vec3 cameraForward;
 
void main(){
	float diffuse = intensity;
	vec4 _color = vec4(texture( myTextureSampler, UV).rgb, 1.0f);
	vec3 reflectionVector = normalize(lightDirection - (2.0f * normals * dot(lightDirection, normals)));

	//vec3 halfVector = normalize(( lightDirection + cameraForward));
	
	float specIntensity = pow( clamp( dot(reflectionVector, normalize(cameraForward)), 0.0f, 1.0f), 25.0f) * diffuse;
	//float specIntensity = pow( clamp( dot(halfVector, normalize(cameraForward)), 0.0f, 1.0f), 25.0f) * diffuse;

	vec4 lightColor = vec4(1.0f, 1.0f, 1.0f, 1.0f);
	_color *= diffuse;
	_color = _color * (1.0f - specIntensity) + specIntensity * lightColor;

	_color.a = 1.0f;
	color = _color;
}