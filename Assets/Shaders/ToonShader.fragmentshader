#version 330 core
 
// Interpolated values from the vertex shaders
in vec2 UV;
in vec3 normals;
in float intensity;
in vec3 lightDirection;
 
// Ouput data
out vec4 color;
 
// Values that stay constant for the whole mesh.
uniform sampler2D myTextureSampler;
uniform vec3 cameraForward;
 
void main(){
	float new_intensity = intensity;
	vec4 _color = vec4(0,0,0,1);
	vec3 reflectionVector = normalize(lightDirection - (2.0f * normals * dot(lightDirection, normals)));
	
	float specIntensity = pow( clamp( dot(reflectionVector, normalize(cameraForward)), 0.0f, 1.0f), 25.0f) * new_intensity;

	_color = vec4(0.75f, 0.33f, 1.0f, 1.0f);
	new_intensity *= 3.0f;
	new_intensity = ceil(new_intensity) / 3.0f;

	_color *= new_intensity;
	_color = _color * (1.0f - specIntensity) + specIntensity * vec4(1.0f, 1.0f, 1.0f, 1.0f);

	_color.a = 1.0f;
	color = _color;
}